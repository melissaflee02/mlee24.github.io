[{"/Users/melissalee/melissaflee02.github.io/src/index.js":"1","/Users/melissalee/melissaflee02.github.io/src/reportWebVitals.js":"2","/Users/melissalee/melissaflee02.github.io/src/App.js":"3","/Users/melissalee/melissaflee02.github.io/src/stories/website/index.js":"4","/Users/melissalee/melissaflee02.github.io/src/stories/website/Toggle/index.js":"5","/Users/melissalee/melissaflee02.github.io/src/stories/website/Card/index.js":"6","/Users/melissalee/melissaflee02.github.io/src/stories/website/Navigation/index.js":"7","/Users/melissalee/melissaflee02.github.io/src/stories/website/Card/Card.jsx":"8","/Users/melissalee/melissaflee02.github.io/src/stories/website/Toggle/Toggle.jsx":"9","/Users/melissalee/melissaflee02.github.io/src/stories/website/Navigation/Navigation.jsx":"10"},{"size":500,"mtime":1629393214128,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1629393214129,"results":"13","hashOfConfig":"12"},{"size":483,"mtime":1629393214127,"results":"14","hashOfConfig":"12"},{"size":105,"mtime":1629393214137,"results":"15","hashOfConfig":"12"},{"size":45,"mtime":1629393214136,"results":"16","hashOfConfig":"12"},{"size":41,"mtime":1629393214132,"results":"17","hashOfConfig":"12"},{"size":53,"mtime":1629393214133,"results":"18","hashOfConfig":"12"},{"size":1859,"mtime":1630042028861,"results":"19","hashOfConfig":"12"},{"size":879,"mtime":1629393214135,"results":"20","hashOfConfig":"12"},{"size":1831,"mtime":1629393214133,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pzbqw7",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/Users/melissalee/melissaflee02.github.io/src/index.js",[],"/Users/melissalee/melissaflee02.github.io/src/reportWebVitals.js",[],"/Users/melissalee/melissaflee02.github.io/src/App.js",["46","47"],"import './App.css';\nimport {Card, Navigation, Toggle} from './stories/website'\n\nconst menu = [\n  {\n    name:'About',\n    link:'',\n  },\n  {\n    name:'LinkedIn',\n    link:'https://www.linkedin.com/in/melissaflee02/',\n  },\n  {\n    name:'Github',\n    link:'https://github.com/melissaflee02',\n  },\n  {\n    name:'Email',\n    link:'mailto: mlee24@stanford.edu',\n  }\n]\n\nconst App = () => (\n  <div className=\"wrapper\">\n    <Navigation id=\"menu\" menu={menu} />\n  </div>\n)\n\nexport default App;\n","/Users/melissalee/melissaflee02.github.io/src/stories/website/index.js",[],"/Users/melissalee/melissaflee02.github.io/src/stories/website/Toggle/index.js",[],"/Users/melissalee/melissaflee02.github.io/src/stories/website/Card/index.js",[],"/Users/melissalee/melissaflee02.github.io/src/stories/website/Navigation/index.js",[],"/Users/melissalee/melissaflee02.github.io/src/stories/website/Card/Card.jsx",["48"],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './card.scss';\n\nconst componentClassName = 'card'\n\nconst Card = ({\n  id,\n  style,\n}) => {\n  return (\n    <div \n      id={id} \n      className=\"wrapper\" \n      style={style}\n    >\n      <div className=\"card-content\">\n        <hr></hr>\n        <p>\n          I'm Melissa, a Computer Science major at&nbsp;\n          <a href=\"https://www.stanford.edu/\">Stanford University</a>\n          . I am a software engineer intern at&nbsp;\n          <a href=\"https://hellopareto.com/\">Pareto Inc.</a>\n          , working with ReactJS and GraphQL to build and maintain responsive web pages.\n        </p>\n        <p>\n          In my free time, I enjoy playing ultimate frisbee and learning more about the programming world through independent coding projects. Feel free to check out my&nbsp;\n          <a href=\"https://github.com/melissaflee02\">Github</a>\n          !\n        </p>\n        <p>\n          Having struggled with social interaction at a young age, I am passionate about leveraging technology to advance the human interaction model. In pursuit of this goal, I envision an Artificial Intelligence bot that can facilitate, and engage in, healthy human interaction.\n        </p>\n        <div className=\"footer\">\n          <a href=\"files/Melissa_Lee_Resume.pdf\">Resume.pdf</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   *  The children JSX\n   */\n  children:PropTypes.node,\n\n  /**\n   * The content map\n   */\n  contentMap:PropTypes.arrayOf(\n    PropTypes.shape({\n      content:PropTypes.string,\n    })\n  )\n}\n\nCard.defaultProps = {\n  children:'some text',\n};\n\nexport default Card","/Users/melissalee/melissaflee02.github.io/src/stories/website/Toggle/Toggle.jsx",["49"],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './toggle.scss';\n\nconst componentClassName = 'toggle'\n\nconst Toggle = ({\n  id,\n  style,\n  name,\n}) => {\n  return (\n    <div className=\"toggle-switch\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle-switch-checkbox\"\n        name={name}\n        id={id}\n      />\n      <label className=\"toggle-switch-label\" htmlFor={name}>\n        <span className=\"toggle-switch-inner\" />\n        <span className=\"toggle-switch-switch\" />\n      </label>\n    </div>  \n  )\n}\n\nToggle.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The HTML name for this element\n   */\n  name:PropTypes.string,\n};\n\nToggle.defaultProps = {\n};\n\nexport default Toggle","/Users/melissalee/melissaflee02.github.io/src/stories/website/Navigation/Navigation.jsx",["50"],"import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport './navigation.scss'\n\n// useState used to toggle dark mode (change state)\n// useEffect ensures the user's selection persists after refresh\nimport { useState, useEffect } from 'react'\n\nimport { Card } from '../Card'\n\nconst componentClassName = 'navigation'\n\nconst Navigation = ({\n  id,\n  style,\n  menu,\n  contentMap,\n}) => {\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [darkMode, setDarkMode] = useState(storedDarkMode);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n\n  return (\n    <nav\n      id={id}\n      style={style}\n    >\n      <div className=\"wrapper\" data-theme={darkMode ? \"dark\" : \"light\"}>\n        <div className=\"nav-content\">\n          { menu.map((item) => (\n            <a key={item.name} href={item.link}>{item.name}</a>\n          )) }\n          <span className=\"mode\" onClick={toggleDarkMode}>\n            {darkMode ? \"Light üïäÔ∏è\" : \"Dark ü¶á\"}\n          </span>\n        </div>\n        <div className=\"card-wrapper\">\n          <Card \n            id=\"card\"\n          />\n        </div>\n      </div>    \n\n    </nav>\n    )\n}\n\nNavigation.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The map of menu elements\n   */\n  menu:PropTypes.arrayOf(\n    PropTypes.shape({\n      name:PropTypes.string.isRequired,\n      link:PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  /**\n   * The content map\n   */\n  contentMap:PropTypes.arrayOf(\n    PropTypes.shape({\n      content:PropTypes.string,\n    })\n  ),\n};\n\nNavigation.defaultProps = {\n};\n\nexport default Navigation",{"ruleId":"51","severity":1,"message":"52","line":2,"column":9,"nodeType":"53","messageId":"54","endLine":2,"endColumn":13},{"ruleId":"51","severity":1,"message":"55","line":2,"column":27,"nodeType":"53","messageId":"54","endLine":2,"endColumn":33},{"ruleId":"51","severity":1,"message":"56","line":5,"column":7,"nodeType":"53","messageId":"54","endLine":5,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":5,"column":7,"nodeType":"53","messageId":"54","endLine":5,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":11,"column":7,"nodeType":"53","messageId":"54","endLine":11,"endColumn":25},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Toggle' is defined but never used.","'componentClassName' is assigned a value but never used."]
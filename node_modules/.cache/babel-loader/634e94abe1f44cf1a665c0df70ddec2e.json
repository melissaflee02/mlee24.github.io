{"ast":null,"code":"var _jsxFileName = \"/Users/melissalee/melissaflee02.github.io/myapp/src/stories/website/Toggle/Toggle.jsx\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './toggle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst componentClassName = 'toggle';\n\nconst Toggle = ({\n  id,\n  style,\n  name,\n  checked,\n  isSmall,\n  isDisabled,\n  optionLabels\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-switch\" + (isSmall ? \" small-switch\" : \"\"),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"toggle-switch-checkbox\",\n        name: name,\n        id: id,\n        checked: checked,\n        disabled: isDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"toggle-switch-label\",\n        htmlFor: id,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: isDisabled ? \"toggle-switch-inner toggle-switch-disabled\" : \"toggle-switch-inner\",\n          \"data-on\": optionLabels[0],\n          \"data-off\": optionLabels[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: isDisabled ? \"toggle-switch-switch toggle-switch-disabled\" : \"toggle-switch-switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Toggle;\nToggle.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id: PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The HTML name for this element\n   */\n  name: PropTypes.string,\n\n  /**\n   * Holds the current state of the toggle\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Whether toggle should be in small mode\n   */\n  isSmall: PropTypes.bool,\n\n  /**\n   * Whether the toggle is disabled\n   */\n  isDisabled: PropTypes.bool,\n\n  /**\n   * Option labels when toggle is not disabled\n   */\n  optionLabels: PropTypes.array\n};\nToggle.defaultProps = {\n  checked: false,\n  isSmall: false,\n  isDisabled: false,\n  optionLabels: [\"Light\", \"Dark\"]\n};\nToggle.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Toggle\",\n  \"props\": {\n    \"checked\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Holds the current state of the toggle\"\n    },\n    \"isSmall\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether toggle should be in small mode\"\n    },\n    \"isDisabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether the toggle is disabled\"\n    },\n    \"optionLabels\": {\n      \"defaultValue\": {\n        \"value\": \"[\\\"Light\\\", \\\"Dark\\\"]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"Option labels when toggle is not disabled\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"The HTML id for this element\"\n    },\n    \"style\": {\n      \"type\": {\n        \"name\": \"objectOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"The React-written, css properties for this element.\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"The HTML name for this element\"\n    }\n  }\n};\nexport default Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/website/Toggle/Toggle.jsx\"] = {\n    name: \"Toggle\",\n    docgenInfo: Toggle.__docgenInfo,\n    path: \"src/stories/website/Toggle/Toggle.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/melissalee/melissaflee02.github.io/myapp/src/stories/website/Toggle/Toggle.jsx"],"names":["React","PropTypes","componentClassName","Toggle","id","style","name","checked","isSmall","isDisabled","optionLabels","propTypes","string","objectOf","bool","array","defaultProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,kBAAkB,GAAG,QAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,EADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,IAHc;AAIdC,EAAAA,OAJc;AAKdC,EAAAA,OALc;AAMdC,EAAAA,UANc;AAOdC,EAAAA;AAPc,CAAD,KAQT;AACJ,sBACE;AACE,IAAA,EAAE,EAAEN,EADN;AAEE,IAAA,KAAK,EAAEC,KAFT;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAE,mBAAmBG,OAAO,GAAG,eAAH,GAAqB,EAA/C,CAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,wBAFZ;AAGE,QAAA,IAAI,EAAEF,IAHR;AAIE,QAAA,EAAE,EAAEF,EAJN;AAKE,QAAA,OAAO,EAAEG,OALX;AAME,QAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,OAAO,EAAEL,EAAhD;AAAA,gCACE;AACE,UAAA,SAAS,EACPK,UAAU,GACN,4CADM,GAEN,qBAJR;AAME,qBAASC,YAAY,CAAC,CAAD,CANvB;AAOE,sBAAUA,YAAY,CAAC,CAAD;AAPxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,SAAS,EACTD,UAAU,GACN,6CADM,GAEN;AAJN;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA7CD;;KAAMN,M;AA+CNA,MAAM,CAACQ,SAAP,GAAmB;AACjB;AACF;AACA;AACEP,EAAAA,EAAE,EAACH,SAAS,CAACW,MAJI;;AAMjB;AACF;AACA;AACEP,EAAAA,KAAK,EAACJ,SAAS,CAACY,QAAV,CAAmBZ,SAAS,CAACW,MAA7B,CATW;;AAWjB;AACF;AACA;AACEN,EAAAA,IAAI,EAACL,SAAS,CAACW,MAdE;;AAgBjB;AACF;AACA;AACEL,EAAAA,OAAO,EAACN,SAAS,CAACa,IAnBD;;AAqBjB;AACF;AACA;AACEN,EAAAA,OAAO,EAACP,SAAS,CAACa,IAxBD;;AA0BjB;AACF;AACA;AACEL,EAAAA,UAAU,EAACR,SAAS,CAACa,IA7BJ;;AA+BjB;AACF;AACA;AACEJ,EAAAA,YAAY,EAACT,SAAS,CAACc;AAlCN,CAAnB;AAqCAZ,MAAM,CAACa,YAAP,GAAsB;AACpBT,EAAAA,OAAO,EAAC,KADY;AAEpBC,EAAAA,OAAO,EAAC,KAFY;AAGpBC,EAAAA,UAAU,EAAC,KAHS;AAIpBC,EAAAA,YAAY,EAAC,CAAC,OAAD,EAAU,MAAV;AAJO,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,eAAeP,MAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './toggle.scss';\n\nconst componentClassName = 'toggle'\n\nconst Toggle = ({\n  id,\n  style,\n  name,\n  checked,\n  isSmall,\n  isDisabled,\n  optionLabels,\n}) => {\n  return (\n    <div\n      id={id}\n      style={style}\n    >\n      <div className={\"toggle-switch\" + (isSmall ? \" small-switch\" : \"\")}>\n        <input\n          type=\"checkbox\"\n          className=\"toggle-switch-checkbox\"\n          name={name}\n          id={id}\n          checked={checked}\n          disabled={isDisabled}\n        />\n        <label className=\"toggle-switch-label\" htmlFor={id}>\n          <span\n            className={\n              isDisabled\n                ? \"toggle-switch-inner toggle-switch-disabled\"\n                : \"toggle-switch-inner\"\n            }\n            data-on={optionLabels[0]}\n            data-off={optionLabels[1]}\n          />\n          <span\n            className={\n            isDisabled\n              ? \"toggle-switch-switch toggle-switch-disabled\"\n              : \"toggle-switch-switch\"\n            }\n          />\n        </label>\n      </div>    \n\n    </div>\n    )\n}\n\nToggle.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The HTML name for this element\n   */\n  name:PropTypes.string,\n\n  /**\n   * Holds the current state of the toggle\n   */\n  checked:PropTypes.bool,\n\n  /**\n   * Whether toggle should be in small mode\n   */\n  isSmall:PropTypes.bool,\n\n  /**\n   * Whether the toggle is disabled\n   */\n  isDisabled:PropTypes.bool,\n\n  /**\n   * Option labels when toggle is not disabled\n   */\n  optionLabels:PropTypes.array,\n};\n\nToggle.defaultProps = {\n  checked:false,\n  isSmall:false,\n  isDisabled:false,\n  optionLabels:[\"Light\", \"Dark\"],\n};\n\nexport default Toggle"]},"metadata":{},"sourceType":"module"}
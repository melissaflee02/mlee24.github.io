{"ast":null,"code":"var _jsxFileName = \"/Users/melissalee/melissaflee02.github.io/myapp/src/stories/website/Navigation/Navigation.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './navigation.scss'; // useState used to toggle dark mode (change state)\n// useEffect ensures the user's selection persists after refresh\n\nimport { useState, useEffect } from 'react';\nimport { Card } from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst componentClassName = 'navigation';\n\nconst Navigation = ({\n  id,\n  style,\n  menu,\n  contentMap\n}) => {\n  _s();\n\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [darkMode, setDarkMode] = useState(storedDarkMode);\n\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    id: id,\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      \"data-theme\": darkMode ? \"dark\" : \"light\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-content\",\n        children: [menu.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.link,\n          children: item.name\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mode\",\n          onClick: toggleDarkMode,\n          children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        id: \"card\",\n        contentMap: contentMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"SNWS3ZFkNhbUj3aKsYCbzXNU8Ws=\");\n\n_c = Navigation;\nNavigation.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id: PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The map of menu elements\n   */\n  menu: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n\n  /**\n   * The content map\n   */\n  contentMap: PropTypes.arrayOf(PropTypes.shape({\n    content: PropTypes.string\n  }))\n};\nNavigation.defaultProps = {};\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/melissalee/melissaflee02.github.io/myapp/src/stories/website/Navigation/Navigation.jsx"],"names":["React","PropTypes","useState","useEffect","Card","componentClassName","Navigation","id","style","menu","contentMap","storedDarkMode","localStorage","getItem","darkMode","setDarkMode","toggleDarkMode","setItem","map","item","link","name","propTypes","string","objectOf","arrayOf","shape","isRequired","content","defaultProps"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,mBAAP,C,CAEA;AACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,IAAT,QAAqB,SAArB;;AAEA,MAAMC,kBAAkB,GAAG,YAA3B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,EADkB;AAElBC,EAAAA,KAFkB;AAGlBC,EAAAA,IAHkB;AAIlBC,EAAAA;AAJkB,CAAD,KAKb;AAAA;;AACJ,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACS,cAAD,CAAxC;;AACA,QAAMK,cAAc,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAAxC;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCH,QAAlC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AACE,IAAA,EAAE,EAAEP,EADN;AAEE,IAAA,KAAK,EAAEC,KAFT;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,oBAAYM,QAAQ,GAAG,MAAH,GAAY,OAAzD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACIL,IAAI,CAACS,GAAL,CAAUC,IAAD,iBACT;AAAmB,UAAA,IAAI,EAAEA,IAAI,CAACC,IAA9B;AAAA,oBAAqCD,IAAI,CAACE;AAA1C,WAAQF,IAAI,CAACE,IAAb;AAAA;AAAA;AAAA;AAAA,gBADA,CADJ,eAIE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAEL,cAAhC;AAAA,oBACGF,QAAQ,GAAG,YAAH,GAAkB;AAD7B;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAEJ;AAFd;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAnCD;;GAAMJ,U;;KAAAA,U;AAqCNA,UAAU,CAACgB,SAAX,GAAuB;AACrB;AACF;AACA;AACEf,EAAAA,EAAE,EAACN,SAAS,CAACsB,MAJQ;;AAMrB;AACF;AACA;AACEf,EAAAA,KAAK,EAACP,SAAS,CAACuB,QAAV,CAAmBvB,SAAS,CAACsB,MAA7B,CATe;;AAWrB;AACF;AACA;AACEd,EAAAA,IAAI,EAACR,SAAS,CAACwB,OAAV,CACHxB,SAAS,CAACyB,KAAV,CAAgB;AACdL,IAAAA,IAAI,EAACpB,SAAS,CAACsB,MAAV,CAAiBI,UADR;AAEdP,IAAAA,IAAI,EAACnB,SAAS,CAACsB,MAAV,CAAiBI;AAFR,GAAhB,CADG,EAKHA,UAnBmB;;AAqBrB;AACF;AACA;AACEjB,EAAAA,UAAU,EAACT,SAAS,CAACwB,OAAV,CACTxB,SAAS,CAACyB,KAAV,CAAgB;AACdE,IAAAA,OAAO,EAAC3B,SAAS,CAACsB;AADJ,GAAhB,CADS;AAxBU,CAAvB;AA+BAjB,UAAU,CAACuB,YAAX,GAA0B,EAA1B;AAGA,eAAevB,UAAf","sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport './navigation.scss'\n\n// useState used to toggle dark mode (change state)\n// useEffect ensures the user's selection persists after refresh\nimport { useState, useEffect } from 'react'\n\nimport { Card } from '../Card'\n\nconst componentClassName = 'navigation'\n\nconst Navigation = ({\n  id,\n  style,\n  menu,\n  contentMap,\n}) => {\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [darkMode, setDarkMode] = useState(storedDarkMode);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n\n  return (\n    <nav\n      id={id}\n      style={style}\n    >\n      <div className=\"wrapper\" data-theme={darkMode ? \"dark\" : \"light\"}>\n        <div className=\"nav-content\">\n          { menu.map((item) => (\n            <a key={item.name} href={item.link}>{item.name}</a>\n          )) }\n          <span className=\"mode\" onClick={toggleDarkMode}>\n            {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n          </span>\n        </div>\n        <Card \n          id=\"card\"\n          contentMap={contentMap}\n        />\n      </div>    \n\n    </nav>\n    )\n}\n\nNavigation.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The map of menu elements\n   */\n  menu:PropTypes.arrayOf(\n    PropTypes.shape({\n      name:PropTypes.string.isRequired,\n      link:PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  /**\n   * The content map\n   */\n  contentMap:PropTypes.arrayOf(\n    PropTypes.shape({\n      content:PropTypes.string,\n    })\n  ),\n};\n\nNavigation.defaultProps = {\n};\n\nexport default Navigation"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/melissalee/melissaflee02.github.io/myapp/src/stories/website/Toggle/Toggle.stories.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import * as React from 'react'\\nimport { useState } from 'react'\\n\\nimport { Toggle } from '.'\\n\\nexport default {\\n  title: 'website/Toggle',\\n  component: Toggle,\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n}\\n\\nexport const Base = () => {\\n  const [mode, setMode] = useState(true);\\n\\n  const onModeChange = (checked) => {\\n    setMode(checked);\\n  }\\n\\n  return (\\n    <Toggle id=\\\"display_mode\\\" name=\\\"display_mode\\\" checked={mode} onChange={ onModeChange } isSmall />\\n  )\\n}\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Base\": {\n    \"startLoc\": {\n      \"col\": 20,\n      \"line\": 14\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 24\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 14\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 24\n    }\n  }\n};\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Toggle } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'website/Toggle',\n  component: Toggle,\n  argTypes: {\n    backgroundColor: {\n      control: 'color'\n    }\n  }\n};\nexport const Base = () => {\n  _s();\n\n  const [mode, setMode] = useState(true);\n\n  const onModeChange = checked => {\n    setMode(checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toggle, {\n    id: \"display_mode\",\n    name: \"display_mode\",\n    checked: mode,\n    onChange: onModeChange,\n    isSmall: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Base, \"7tl4lVu9K3SzZlEV/Wb6t6XjH3U=\");\n\n_c = Base;\nBase.parameters = {\n  storySource: {\n    source: \"() => {\\n  const [mode, setMode] = useState(true);\\n\\n  const onModeChange = (checked) => {\\n    setMode(checked);\\n  }\\n\\n  return (\\n    <Toggle id=\\\"display_mode\\\" name=\\\"display_mode\\\" checked={mode} onChange={ onModeChange } isSmall />\\n  )\\n}\"\n  },\n  ...Base.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Base\");\nBase.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Base\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/website/Toggle/Toggle.stories.jsx\"] = {\n    name: \"Base\",\n    docgenInfo: Base.__docgenInfo,\n    path: \"src/stories/website/Toggle/Toggle.stories.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/melissalee/melissaflee02.github.io/myapp/src/stories/website/Toggle/Toggle.stories.jsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","useState","Toggle","title","component","argTypes","backgroundColor","control","Base","mode","setMode","onModeChange","checked","parameters","storySource","source"],"mappings":";;;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,4fAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,UAAO;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAA1C;AAA8D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1E;AAA+F,eAAU;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB;AAAzG;AAAR,CAAxB;AAEJ,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,MAAT,QAAuB,GAAvB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,gBADM;AAEbC,EAAAA,SAAS,EAAEF,MAFE;AAGbG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AADT;AAHG,CAAf;AAQA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMU,YAAY,GAAIC,OAAD,IAAa;AAChCF,IAAAA,OAAO,CAACE,OAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,cAAX;AAA0B,IAAA,IAAI,EAAC,cAA/B;AAA8C,IAAA,OAAO,EAAEH,IAAvD;AAA6D,IAAA,QAAQ,EAAGE,YAAxE;AAAuF,IAAA,OAAO;AAA9F;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAVM;;GAAMH,I;;KAAAA,I;AAabA,IAAI,CAACK,UAAL,GAAkB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAAuR,KAAGP,IAAI,CAACK;AAA/R,CAAlB","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import * as React from 'react'\\nimport { useState } from 'react'\\n\\nimport { Toggle } from '.'\\n\\nexport default {\\n  title: 'website/Toggle',\\n  component: Toggle,\\n  argTypes: {\\n    backgroundColor: { control: 'color' },\\n  },\\n}\\n\\nexport const Base = () => {\\n  const [mode, setMode] = useState(true);\\n\\n  const onModeChange = (checked) => {\\n    setMode(checked);\\n  }\\n\\n  return (\\n    <Toggle id=\\\"display_mode\\\" name=\\\"display_mode\\\" checked={mode} onChange={ onModeChange } isSmall />\\n  )\\n}\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Base\":{\"startLoc\":{\"col\":20,\"line\":14},\"endLoc\":{\"col\":1,\"line\":24},\"startBody\":{\"col\":20,\"line\":14},\"endBody\":{\"col\":1,\"line\":24}}};\n    \nimport * as React from 'react'\nimport { useState } from 'react'\n\nimport { Toggle } from '.'\n\nexport default {\n  title: 'website/Toggle',\n  component: Toggle,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n}\n\nexport const Base = () => {\n  const [mode, setMode] = useState(true);\n\n  const onModeChange = (checked) => {\n    setMode(checked);\n  }\n\n  return (\n    <Toggle id=\"display_mode\" name=\"display_mode\" checked={mode} onChange={ onModeChange } isSmall />\n  )\n};\n\n\nBase.parameters = { storySource: { source: \"() => {\\n  const [mode, setMode] = useState(true);\\n\\n  const onModeChange = (checked) => {\\n    setMode(checked);\\n  }\\n\\n  return (\\n    <Toggle id=\\\"display_mode\\\" name=\\\"display_mode\\\" checked={mode} onChange={ onModeChange } isSmall />\\n  )\\n}\" }, ...Base.parameters };"]},"metadata":{},"sourceType":"module"}
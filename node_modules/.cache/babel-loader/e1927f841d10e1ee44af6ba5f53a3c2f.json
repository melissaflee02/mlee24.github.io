{"ast":null,"code":"import _slicedToArray from\"/Users/melissalee/melissaflee02.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import'./navigation.scss';// useState used to toggle dark mode (change state)\n// useEffect ensures the user's selection persists after refresh\nimport{useState,useEffect}from'react';import{Card}from'../Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var componentClassName='navigation';var Navigation=function Navigation(_ref){var id=_ref.id,style=_ref.style,menu=_ref.menu,contentMap=_ref.contentMap;var storedDarkMode=localStorage.getItem(\"DARK_MODE\");var _useState=useState(storedDarkMode),_useState2=_slicedToArray(_useState,2),darkMode=_useState2[0],setDarkMode=_useState2[1];var toggleDarkMode=function toggleDarkMode(){return setDarkMode(!darkMode);};useEffect(function(){localStorage.setItem(\"DARK_MODE\",darkMode);},[darkMode]);return/*#__PURE__*/_jsx(\"nav\",{id:id,style:style,children:/*#__PURE__*/_jsxs(\"div\",{className:\"wrapper\",\"data-theme\":darkMode?\"dark\":\"light\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nav-content\",children:[menu.map(function(item){return/*#__PURE__*/_jsx(\"a\",{href:item.link,children:item.name},item.name);}),/*#__PURE__*/_jsx(\"span\",{className:\"mode\",onClick:toggleDarkMode,children:darkMode?\"Light üïäÔ∏è\":\"Dark ü¶á\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-wrapper\",children:/*#__PURE__*/_jsx(Card,{id:\"card\"})})]})});};Navigation.defaultProps={};export default Navigation;","map":{"version":3,"sources":["/Users/melissalee/melissaflee02.github.io/src/stories/website/Navigation/Navigation.jsx"],"names":["React","useState","useEffect","Card","componentClassName","Navigation","id","style","menu","contentMap","storedDarkMode","localStorage","getItem","darkMode","setDarkMode","toggleDarkMode","setItem","map","item","link","name","defaultProps"],"mappings":"gKAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAO,mBAAP,CAEA;AACA;AACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,OAASC,IAAT,KAAqB,SAArB,C,wFAEA,GAAMC,CAAAA,kBAAkB,CAAG,YAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAKb,IAJJC,CAAAA,EAII,MAJJA,EAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,IAEI,MAFJA,IAEI,CADJC,UACI,MADJA,UACI,CACJ,GAAMC,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAvB,CACA,cAAgCX,QAAQ,CAACS,cAAD,CAAxC,wCAAOG,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMD,CAAAA,WAAW,CAAC,CAACD,QAAF,CAAjB,EAAvB,CACAX,SAAS,CAAC,UAAM,CACdS,YAAY,CAACK,OAAb,CAAqB,WAArB,CAAkCH,QAAlC,EACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA,mBACE,YACE,EAAE,CAAEP,EADN,CAEE,KAAK,CAAEC,KAFT,uBAIE,aAAK,SAAS,CAAC,SAAf,CAAyB,aAAYM,QAAQ,CAAG,MAAH,CAAY,OAAzD,wBACE,aAAK,SAAS,CAAC,aAAf,WACIL,IAAI,CAACS,GAAL,CAAS,SAACC,IAAD,qBACT,UAAmB,IAAI,CAAEA,IAAI,CAACC,IAA9B,UAAqCD,IAAI,CAACE,IAA1C,EAAQF,IAAI,CAACE,IAAb,CADS,EAAT,CADJ,cAIE,aAAM,SAAS,CAAC,MAAhB,CAAuB,OAAO,CAAEL,cAAhC,UACGF,QAAQ,CAAG,WAAH,CAAiB,SAD5B,EAJF,GADF,cASE,YAAK,SAAS,CAAC,cAAf,uBACE,KAAC,IAAD,EACE,EAAE,CAAC,MADL,EADF,EATF,GAJF,EADF,CAuBD,CApCD,CAqEAR,UAAU,CAACgB,YAAX,CAA0B,EAA1B,CAGA,cAAehB,CAAAA,UAAf","sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport './navigation.scss'\n\n// useState used to toggle dark mode (change state)\n// useEffect ensures the user's selection persists after refresh\nimport { useState, useEffect } from 'react'\n\nimport { Card } from '../Card'\n\nconst componentClassName = 'navigation'\n\nconst Navigation = ({\n  id,\n  style,\n  menu,\n  contentMap,\n}) => {\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [darkMode, setDarkMode] = useState(storedDarkMode);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n\n  return (\n    <nav\n      id={id}\n      style={style}\n    >\n      <div className=\"wrapper\" data-theme={darkMode ? \"dark\" : \"light\"}>\n        <div className=\"nav-content\">\n          { menu.map((item) => (\n            <a key={item.name} href={item.link}>{item.name}</a>\n          )) }\n          <span className=\"mode\" onClick={toggleDarkMode}>\n            {darkMode ? \"Light üïäÔ∏è\" : \"Dark ü¶á\"}\n          </span>\n        </div>\n        <div className=\"card-wrapper\">\n          <Card \n            id=\"card\"\n          />\n        </div>\n      </div>    \n\n    </nav>\n    )\n}\n\nNavigation.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The map of menu elements\n   */\n  menu:PropTypes.arrayOf(\n    PropTypes.shape({\n      name:PropTypes.string.isRequired,\n      link:PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  /**\n   * The content map\n   */\n  contentMap:PropTypes.arrayOf(\n    PropTypes.shape({\n      content:PropTypes.string,\n    })\n  ),\n};\n\nNavigation.defaultProps = {\n};\n\nexport default Navigation"]},"metadata":{},"sourceType":"module"}
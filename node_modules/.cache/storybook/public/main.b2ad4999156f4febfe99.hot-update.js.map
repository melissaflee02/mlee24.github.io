{"version":3,"file":"main.b2ad4999156f4febfe99.hot-update.js","sources":["webpack:///./src/stories/website/Toggle/Toggle.jsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './toggle.scss';\n\nconst componentClassName = 'toggle'\n\nconst Toggle = ({\n  id,\n  style,\n  name,\n  checked,\n  onChange,\n  isSmall,\n  isDisabled,\n  optionLabels,\n}) => {\n  return (\n    <div\n      id={id}\n      style={style}\n    >\n      <div className={\"toggle-switch\" + (isSmall ? \" small-switch\" : \"\")}>\n        <input\n          type=\"checkbox\"\n          className=\"toggle-switch-checkbox\"\n          name={name}\n          id={id}\n          checked={checked}\n          onChange={e => onChange(e.target.checked)}\n          disabled={isDisabled}\n        />\n        <label className=\"toggle-switch-label\" htmlFor={id}>\n          <span\n            className={\n              isDisabled\n                ? \"toggle-switch-inner toggle-switch-disabled\"\n                : \"toggle-switch-inner\"\n            }\n            data-on={optionLabels[0]}\n            data-off={optionLabels[1]}\n          />\n          <span\n            className={\n            isDisabled\n              ? \"toggle-switch-switch toggle-switch-disabled\"\n              : \"toggle-switch-switch\"\n            }\n          />\n        </label>\n      </div>    \n\n    </div>\n    )\n}\n\nToggle.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The HTML name for this element\n   */\n  name:PropTypes.string,\n\n  /**\n   * Holds the current state of the toggle\n   */\n  checked:PropTypes.bool,\n\n  /**\n   * Function called when the input's onChange is triggered\n   */\n  onChange:PropTypes.func,\n\n  /**\n   * Whether toggle should be in small mode\n   */\n  isSmall:PropTypes.bool,\n\n  /**\n   * Whether the toggle is disabled\n   */\n  isDisabled:PropTypes.bool,\n\n  /**\n   * Option labels when toggle is not disabled\n   */\n  optionLabels:PropTypes.array,\n};\n\nToggle.defaultProps = {\n  checked:false,\n  isSmall:false,\n  isDisabled:false,\n  optionLabels:[\"Light\", \"Dark\"],\n};\n\nexport default Toggle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAEA;AAKA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;AADA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AAhDA;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AA0CA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}
{"version":3,"sources":["stories/website/Card/Card.jsx","stories/website/Navigation/Navigation.jsx","stories/website/Toggle/Toggle.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","id","style","className","href","defaultProps","children","Navigation","menu","storedDarkMode","contentMap","localStorage","getItem","useState","darkMode","setDarkMode","useEffect","setItem","map","item","link","name","onClick","Toggle","type","htmlFor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAMMA,EAAO,SAAC,GAGP,IAFLC,EAEI,EAFJA,GACAC,EACI,EADJA,MAEA,OACE,qBACED,GAAIA,EACJE,UAAU,UACVD,MAAOA,EAHT,SAKE,sBAAKC,UAAU,eAAf,UACE,uBACA,iFAEE,mBAAGC,KAAK,4BAAR,iCAFF,sGAIE,mBAAGA,KAAK,+BAAR,wBAJF,8HAOA,kFAEE,mBAAGA,KAAK,wCAAR,+BAFF,uHAIE,mBAAGA,KAAK,mCAAR,oBAJF,OAOA,+SAGA,qBAAKD,UAAU,SAAf,SACE,mBAAGC,KAAK,+BAAR,gCAiCVJ,EAAKK,aAAe,CAClBC,SAAS,aAGIN,QC7DTO,EAAa,SAAC,GAKb,IAJLN,EAII,EAJJA,GACAC,EAGI,EAHJA,MACAM,EAEI,EAFJA,KAGMC,GADF,EADJC,WAEuBC,aAAaC,QAAQ,cAC5C,EAAgCC,mBAASJ,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,qBAAU,WACRL,aAAaM,QAAQ,YAAaH,KACjC,CAACA,IAGF,qBACEb,GAAIA,EACJC,MAAOA,EAFT,SAIE,sBAAKC,UAAU,UAAU,aAAYW,EAAW,OAAS,QAAzD,UACE,sBAAKX,UAAU,cAAf,UACIK,EAAKU,KAAI,SAACC,GAAD,OACT,mBAAmBf,KAAMe,EAAKC,KAA9B,SAAqCD,EAAKE,MAAlCF,EAAKE,SAEf,sBAAMlB,UAAU,OAAOmB,QAfR,kBAAMP,GAAaD,IAelC,SACGA,EAAW,2BAAc,yBAG9B,qBAAKX,UAAU,eAAf,SACE,cAAC,EAAD,CACEF,GAAG,iBAwCfM,EAAWF,aAAe,GAGXE,QC9ETgB,G,MAAS,SAAC,GAIT,IAHLtB,EAGI,EAHJA,GAEAoB,GACI,EAFJnB,MAEI,EADJmB,MAEA,OACE,sBAAKlB,UAAU,gBAAf,UACE,uBACEqB,KAAK,WACLrB,UAAU,yBACVkB,KAAMA,EACNpB,GAAIA,IAEN,wBAAOE,UAAU,sBAAsBsB,QAASJ,EAAhD,UACE,sBAAMlB,UAAU,wBAChB,sBAAMA,UAAU,iCAuBxBoB,EAAOlB,aAAe,GAGPkB,IC5CTf,EAAO,CACX,CACEa,KAAK,QACLD,KAAK,IAEP,CACEC,KAAK,WACLD,KAAK,8CAEP,CACEC,KAAK,SACLD,KAAK,oCAEP,CACEC,KAAK,QACLD,KAAK,gCAUMM,EANH,kBACV,qBAAKvB,UAAU,UAAf,SACE,cAAC,EAAD,CAAYF,GAAG,OAAOO,KAAMA,OCZjBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2ba7c22.chunk.js","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './card.scss';\n\nconst componentClassName = 'card'\n\nconst Card = ({\n  id,\n  style,\n}) => {\n  return (\n    <div \n      id={id} \n      className=\"wrapper\" \n      style={style}\n    >\n      <div className=\"card-content\">\n        <hr></hr>\n        <p>\n          Hi. I'm Melissa, a Computer Science major at&nbsp;\n          <a href=\"https://www.stanford.edu/\">Stanford University</a>\n          &nbsp;studying Artificial Intelligence and Human-Computer Interaction. Last Summer, I interned at&nbsp;\n          <a href=\"https://www.riotgames.com/en\">Riot Games</a>\n          , revamping our name-checking service with a new ML model to better detect and penalize disruptive user-specified names.\n        </p>\n        <p>\n          In my free time, I enjoy growing the sport of&nbsp;\n          <a href=\"https://www.wrestling.life/yes-we-can\">women's wrestling</a>\n          &nbsp;and learning more about the programming world through independent coding projects. Feel free to check out my&nbsp;\n          <a href=\"https://github.com/melissaflee02\">Github</a>\n          !\n        </p>\n        <p>\n          Having struggled with social interaction at a young age, I am passionate about leveraging technology to advance the human interaction model. In pursuit of this goal, I envision an Artificial Intelligence bot that can facilitate, and engage in, healthy human interaction.\n        </p>\n        <div className=\"footer\">\n          <a href=\"files/Melissa_Lee_Resume.pdf\">Resume.pdf</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   *  The children JSX\n   */\n  children:PropTypes.node,\n\n  /**\n   * The content map\n   */\n  contentMap:PropTypes.arrayOf(\n    PropTypes.shape({\n      content:PropTypes.string,\n    })\n  )\n}\n\nCard.defaultProps = {\n  children:'some text',\n};\n\nexport default Card","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport './navigation.scss'\n\n// useState used to toggle dark mode (change state)\n// useEffect ensures the user's selection persists after refresh\nimport { useState, useEffect } from 'react'\n\nimport { Card } from '../Card'\n\nconst componentClassName = 'navigation'\n\nconst Navigation = ({\n  id,\n  style,\n  menu,\n  contentMap,\n}) => {\n  const storedDarkMode = localStorage.getItem(\"DARK_MODE\");\n  const [darkMode, setDarkMode] = useState(storedDarkMode);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n\n  return (\n    <nav\n      id={id}\n      style={style}\n    >\n      <div className=\"wrapper\" data-theme={darkMode ? \"dark\" : \"light\"}>\n        <div className=\"nav-content\">\n          { menu.map((item) => (\n            <a key={item.name} href={item.link}>{item.name}</a>\n          )) }\n          <span className=\"mode\" onClick={toggleDarkMode}>\n            {darkMode ? \"Light üïäÔ∏è\" : \"Dark ü¶á\"}\n          </span>\n        </div>\n        <div className=\"card-wrapper\">\n          <Card \n            id=\"card\"\n          />\n        </div>\n      </div>    \n\n    </nav>\n    )\n}\n\nNavigation.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The map of menu elements\n   */\n  menu:PropTypes.arrayOf(\n    PropTypes.shape({\n      name:PropTypes.string.isRequired,\n      link:PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  /**\n   * The content map\n   */\n  contentMap:PropTypes.arrayOf(\n    PropTypes.shape({\n      content:PropTypes.string,\n    })\n  ),\n};\n\nNavigation.defaultProps = {\n};\n\nexport default Navigation","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport './toggle.scss';\n\nconst componentClassName = 'toggle'\n\nconst Toggle = ({\n  id,\n  style,\n  name,\n}) => {\n  return (\n    <div className=\"toggle-switch\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle-switch-checkbox\"\n        name={name}\n        id={id}\n      />\n      <label className=\"toggle-switch-label\" htmlFor={name}>\n        <span className=\"toggle-switch-inner\" />\n        <span className=\"toggle-switch-switch\" />\n      </label>\n    </div>  \n  )\n}\n\nToggle.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id:PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style:PropTypes.objectOf(PropTypes.string),\n\n  /**\n   * The HTML name for this element\n   */\n  name:PropTypes.string,\n};\n\nToggle.defaultProps = {\n};\n\nexport default Toggle","import './App.css';\nimport {Card, Navigation, Toggle} from './stories/website'\n\nconst menu = [\n  {\n    name:'About',\n    link:'',\n  },\n  {\n    name:'LinkedIn',\n    link:'https://www.linkedin.com/in/melissaflee02/',\n  },\n  {\n    name:'Github',\n    link:'https://github.com/melissaflee02',\n  },\n  {\n    name:'Email',\n    link:'mailto: mlee24@stanford.edu',\n  }\n]\n\nconst App = () => (\n  <div className=\"wrapper\">\n    <Navigation id=\"menu\" menu={menu} />\n  </div>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}